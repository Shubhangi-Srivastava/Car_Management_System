/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CarDetails;
import model.CarDetailsHistory;

/**
 *
 * @author shubhangisrivastava
 */
public class SearchJPanel extends javax.swing.JPanel {

     CarDetailsHistory history;
    public SearchJPanel( CarDetailsHistory history) {
        initComponents();
         this.history = history;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        btnFirstCar = new javax.swing.JButton();
        btnAvailability = new javax.swing.JButton();
        btnSearchBrand = new javax.swing.JButton();
        btnyearsearch = new javax.swing.JButton();
        btnMinMumSeats = new javax.swing.JButton();
        btnCity = new javax.swing.JButton();
        btnCarmanufacturers = new javax.swing.JButton();
        btnModelNum = new javax.swing.JButton();
        btnExpiry = new javax.swing.JButton();
        btnSerialNum = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        txtTitle = new javax.swing.JTextField();

        jTextField2.setText("jTextField2");

        setBackground(new java.awt.Color(204, 204, 255));

        btnFirstCar.setText("Find me the first available passenger car.");
        btnFirstCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstCarActionPerformed(evt);
            }
        });

        btnAvailability.setText("How many cars are currently available? How many are not?");
        btnAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailabilityActionPerformed(evt);
            }
        });

        btnSearchBrand.setText("List all cars that are made by Toyota, GM, etc.");
        btnSearchBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBrandActionPerformed(evt);
            }
        });

        btnyearsearch.setText("List all cars that were manufactured in a given year, ‘x’.");
        btnyearsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnyearsearchActionPerformed(evt);
            }
        });

        btnMinMumSeats.setText("List all cars with a minimum of x seats but no more than y seats.");
        btnMinMumSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinMumSeatsActionPerformed(evt);
            }
        });

        btnCity.setText("List all cars that are available in a given city.");
        btnCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCityActionPerformed(evt);
            }
        });

        btnCarmanufacturers.setText("List all the car manufacturers used by the (this) Uber.");
        btnCarmanufacturers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarmanufacturersActionPerformed(evt);
            }
        });

        btnModelNum.setText("List all cars given the model number.");
        btnModelNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModelNumActionPerformed(evt);
            }
        });

        btnExpiry.setText("List all cars that have expired maintenance certificate.");
        btnExpiry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpiryActionPerformed(evt);
            }
        });

        btnSerialNum.setText("Find a car with the given serial number. List the attributes of the found car.");
        btnSerialNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerialNumActionPerformed(evt);
            }
        });

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jTable1.setForeground(new java.awt.Color(204, 204, 204));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Car Name", "Availability", "Brand", "Manufacture Year", "Number Of Seats", "Serial Number", "Model Number", "City", "MAintenance Expiration Datel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextField1.setText("jTextField1");

        txtTitle.setFont(new java.awt.Font("Chalkboard", 0, 18)); // NOI18N
        txtTitle.setText("Car Search Results");
        txtTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTitleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMinMumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExpiry, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnyearsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCity, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSearchBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCarmanufacturers, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(325, 325, 325)
                        .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(btnFirstCar, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(btnSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAvailability, btnMinMumSeats, btnSearchBrand, btnyearsearch});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCarmanufacturers, btnCity, btnExpiry, btnModelNum});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFirstCar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModelNum)
                    .addComponent(btnAvailability))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchBrand)
                    .addComponent(btnCarmanufacturers))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnyearsearch)
                    .addComponent(btnCity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMinMumSeats)
                    .addComponent(btnExpiry))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSerialNum)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAvailability, btnCarmanufacturers, btnCity, btnExpiry, btnFirstCar, btnMinMumSeats, btnModelNum, btnSearchBrand, btnSerialNum, btnyearsearch});

    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBrandActionPerformed
        
        //String brand = model.getValueAt(selectedRowIndex, 2).toString();
        String searchBrand = null;
        String brand = JOptionPane.showInputDialog(null, "Enter the brand name of the car", searchBrand);
        ArrayList<CarDetails> list = history.filterByBrand(brand);
        
        populateTable(list);
    }//GEN-LAST:event_btnSearchBrandActionPerformed

    private void btnyearsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnyearsearchActionPerformed

        String searchYear = null;
        String searchYear_cars = JOptionPane.showInputDialog(null, "Enter the year.", searchYear);
        ArrayList<CarDetails> list = history.filterByYear(searchYear_cars);
        
        populateTable(list);

        // TODO add your handling code here:
    }//GEN-LAST:event_btnyearsearchActionPerformed

    private void btnExpiryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpiryActionPerformed
        
       ArrayList<CarDetails> list = history.filterByExpiry();
        
        populateTable(list);
        

    }//GEN-LAST:event_btnExpiryActionPerformed

    private void btnCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCityActionPerformed
        
        String searchCity = null;
        String city = JOptionPane.showInputDialog(null, "Enter the City.", searchCity);
        ArrayList<CarDetails> list = history.filterByCity(city);
        
        populateTable(list);


        // TODO add your handling code here:
    }//GEN-LAST:event_btnCityActionPerformed

    private void btnModelNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModelNumActionPerformed

         String searchModelNum = null;
        String modelNum = JOptionPane.showInputDialog(null, "Enter the model number.", searchModelNum);
        ArrayList<CarDetails> list = history.filterByModelNum(modelNum);
        
        populateTable(list);


        // TODO add your handling code here:
    }//GEN-LAST:event_btnModelNumActionPerformed

    private void btnSerialNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerialNumActionPerformed
        
         String searchSerialNum = null;
        String serialNum = JOptionPane.showInputDialog(null, "Enter the model number.", searchSerialNum);
        ArrayList<CarDetails> list = history.filterBySerialNum(serialNum);
        
        populateTable(list);
        

        // TODO add your handling code here:
    }//GEN-LAST:event_btnSerialNumActionPerformed

    private void btnAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailabilityActionPerformed

        ArrayList<CarDetails> list = history.filterByAvailability();
        populateTable(list);      
    }//GEN-LAST:event_btnAvailabilityActionPerformed

    private void btnFirstCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstCarActionPerformed
  
        ArrayList<CarDetails> list = history.filterByFirstCar();
        populateTable(list);
       
    }//GEN-LAST:event_btnFirstCarActionPerformed

    private void btnCarmanufacturersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarmanufacturersActionPerformed
        
        ArrayList<CarDetails> list = history.filterByManufacturer();
        
        populateTable(list);
    }//GEN-LAST:event_btnCarmanufacturersActionPerformed

    private void btnMinMumSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinMumSeatsActionPerformed

        String minSeats = null;
        String maxSeats = null;
        String minSeat = JOptionPane.showInputDialog(null, "Please Enter the minimum seats required.", minSeats);
        String maxSeat = JOptionPane.showInputDialog(null, "Please Enter the maximum seats required.", maxSeats);
        ArrayList<CarDetails> list = history.filterBySeatCount(minSeat, maxSeat);
        
        populateTable(list);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMinMumSeatsActionPerformed

    private void txtTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTitleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvailability;
    private javax.swing.JButton btnCarmanufacturers;
    private javax.swing.JButton btnCity;
    private javax.swing.JButton btnExpiry;
    private javax.swing.JButton btnFirstCar;
    private javax.swing.JButton btnMinMumSeats;
    private javax.swing.JButton btnModelNum;
    private javax.swing.JButton btnSearchBrand;
    private javax.swing.JButton btnSerialNum;
    private javax.swing.JButton btnyearsearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables


private void populateTable(ArrayList<CarDetails> list) {
    
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);
    
    for(CarDetails cd : list) {
        
        Object[] row = new Object[9];
        row[0] = cd;
        if(cd.getAvailability() == "yes"){
            row[1]="Yes";
       } else if(cd.getAvailability() == "no"){
              row[1]="No";
          }else{
       row[1] = "No";
     }
        row[2] = cd.getBrand();
        row[3] = cd.getManufacture_year();
        row[4] = cd.getMin_max_seats();
        row[5] = cd.getSerial_number();
        row[6] = cd.getModel_num();
        row[7] = cd.getCity();
        row[8] = cd.getMaint_cert_expiration_dt();
        
        model.addRow(row);
    }
    }

}


